归并算法
    时间复杂度：对长度为n的文件，需进行logn趟二路归并，每趟归并的时间为O(n)，故其时间复杂度无论是在最好情况下还是在最坏情况下均是O(nlgn)。
    空间复杂度：看代码，得出每一次二路递归，都需要n个大小的临时空间数组（每一次二路递归应该是能复用同一个临时空间的），所以空间复杂度为O（n）。

#
以时间换空间
        我看到网上很多blog分享空间复杂度只有O(1)的归并排序法；因为传统的归并排序所消耗的空间主要是在归并函数（把两个有序的函数合并成一个有序的函数），所以如果要让时间复杂度为 O(1)  ，那么也只能在归并函数中做文章了。代码就不列出来了，其主要思想就是借助于快速排序（其实就是相当于归并函数被快速排序函数替换了）；这样的方法虽然可以减少内存的消耗，但是却会在时间上带来损失，因为这样时间复杂度却变成了  O(n^2)  了；所以这种方法并不是一个两全其美的idea；

http://www.cnblogs.com/jingmoxukong/p/4308823.html
http://blog.csdn.net/yuzhihui_no1/article/details/44223225